<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.starcoffee.mapper.MemberMapper">

    <resultMap id="memberInfo" type="com.project.starcoffee.domain.member.Member">
        <result property="memberId" column="member_id" javaType="java.util.UUID"/>
        <result property="name" column="name"/>
        <result property="loginId" column="login_id"/>
        <result property="password" column="password"/>
        <result property="tel" column="tel"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="birth" column="birth"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="nickName" column="nick_name"/>
        <result property="gender" column="gender"/>

        <collection property="cards" ofType="com.project.starcoffee.domain.card.LogCard">
            <id property="cardLogId" column="card_log_id" javaType="java.util.UUID"/>
            <result property="memberId" column="member_id" javaType="java.util.UUID"/>
            <result property="cardId" column="card_id" javaType="java.util.UUID"/>
            <result property="status" column="status"/>
            <result property="moneyStatus" column="money_status"/>
            <result property="cardAmount" column="card_amount"/>
            <result property="cardBalance" column="card_balance"/>
            <result property="createdAt" column="created_at"/>
            <result property="updatedAt" column="updated_at"/>
        </collection>
    </resultMap>

    <insert id="saveMember" parameterType="com.project.starcoffee.controller.request.member.MemberRequest">
        INSERT INTO MEMBERS (name, login_id, password, tel, email, birth,  nick_name, gender)
        VALUES (#{name}, #{loginId}, #{password}, #{tel}, #{email}, #{birth}, #{nickName}, #{gender})

        <selectKey keyProperty="memberId" resultType="java.util.UUID" order="AFTER">
            SELECT bin_to_uuid(member_id,1) as memberId
            FROM MEMBERS
            WHERE created_at = (SELECT MAX(created_at) FROM MEMBERS)
        </selectKey>
    </insert>

    <select id="findById" resultType="java.lang.String">
        SELECT login_id
        FROM MEMBERS
        WHERE login_id = #{loginId}
    </select>

    <select id="findByMember" resultMap="memberInfo">
        SELECT bin_to_uuid(member_id,1) as member_id, name, login_id, password, tel, email, status, birth, created_at, updated_at, nick_name, gender
        FROM MEMBERS
        WHERE member_id = uuid_to_bin(#{memberId},1)
    </select>

    <select id="findByIdAndPassword" resultMap="memberInfo">
        SELECT bin_to_uuid(member_id,1) as member_id, name, login_id, password, tel, email, status, birth, created_at, updated_at, nick_name, gender
        FROM MEMBERS
        WHERE login_id = #{loginId} AND password = #{password}
          AND status != 'DELETED'
    </select>

    <update id="updatePassword">
        UPDATE MEMBERS
        SET password = #{password}, updated_at = NOW()
        WHERE login_id = #{loginId}
    </update>

    <update id="updateNickName">
        UPDATE MEMBERS
        SET nick_name = #{nickName}, updated_at = NOW()
        WHERE login_id = #{loginId}
    </update>

    <update id="updateEmail">
        UPDATE MEMBERS
        SET email = #{email}, updated_at = NOW()
        WHERE login_id = #{loginId}
    </update>

    <update id="updateNumber">
        UPDATE MEMBERS
        SET tel = #{phoneNumber}, updated_at = NOW()
        WHERE login_id = #{loginId}
    </update>

    <update id="deleteMember">
        UPDATE MEMBERS
        SET status = 'DELETED', updated_at = NOW()
        WHERE login_id = #{loginId} AND status != 'DELETED'
    </update>

</mapper>